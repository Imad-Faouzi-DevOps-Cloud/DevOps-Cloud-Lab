# Define the Kubernetes Deployment that runs the TaskManager API application
apiVersion: apps/v1
kind: Deployment
metadata:
  name: taskmanager-api
spec:
  replicas: 2  # Run two pods for high availability and basic load balancing
  revisionHistoryLimit: 1  # Keep only the last version of deployment history (for smaller rollout history)

  selector:
    matchLabels:
      app: taskmanager-api  # Match pods with this label

  template:
    metadata:
      labels:
        app: taskmanager-api  # Pods created by this deployment will have this label

    spec:
      containers:
      - name: taskmanager-api
        image: gcr.io/devops-lab-464007/taskmanager-api  # Pull image from your GCR registry (CI/CD must push to this tag)
        ports:
        - containerPort: 8000  # The app runs on port 8000 inside the container

        env:
          - name: DATABASE_URL
            value: "postgresql://postgres:postgres@db:5432/postgres"  # DB connection string for backend
          - name: JWT_SECRET_KEY
            value: "supersecretkey"  # Secret for JWT (should be moved to a Kubernetes Secret in prod)

        readinessProbe:  # Tell Kubernetes when the app is ready to serve traffic
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10

        livenessProbe:  # Tell Kubernetes how to detect if the app is stuck and needs a restart
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 15
          periodSeconds: 20
