pipeline {
  agent any

  environment {
    COMPOSE_PROJECT_NAME = "flasktodo"
  }

  stages {
    stage('Checkout') {
      steps {
        checkout scm
      }
    }

    stage('Build Docker Images') {
      steps {
        dir('mini-project-4-flask-postgres') {
          dockerCompose.up('--build -d') // build images and start containers detached
        }
      }
    }

    stage('Health Check Test') {
      steps {
        dir('mini-project-4-flask-postgres') {
          // Wait for service to be ready and test health
          sh '''
            echo "Waiting for Flask API to be ready..."
            for i in {1..10}; do
              curl -f http://localhost:5000/ && echo "✅ Health check passed." && exit 0
              echo "Waiting..."
              sleep 3
            done
            echo "❌ Health check failed."
            exit 1
          '''
        }
      }
    }

    stage('Deploy (Optional)') {
      steps {
        echo '✅ In a real pipeline, this would deploy to staging/production.'
      }
    }
  }

  post {
    always {
      dir('mini-project-4-flask-postgres') {
        dockerCompose.down()  // stop and remove containers
      }
    }
  }
}
