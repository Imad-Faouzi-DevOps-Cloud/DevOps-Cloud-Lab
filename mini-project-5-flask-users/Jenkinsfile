pipeline {
    agent any

    environment {
        IMAGE_NAME = "mini-project-5-flask-users"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('mini-project-5-flask-users') {
                    withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKERHUB_USER', passwordVariable: 'DOCKERHUB_PASS')]) {
                        script {
                            docker.build("${DOCKERHUB_USER}/${IMAGE_NAME}", '.')
                        }
                    }
                }
            }
        }

        stage('Run Tests') {
            steps {
                dir('mini-project-5-flask-users') {
                    withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKERHUB_USER', passwordVariable: 'DOCKERHUB_PASS')]) {
                        script {
                            docker.image("${DOCKERHUB_USER}/${IMAGE_NAME}").inside {
                                sh 'pytest tests'
                            }
                        }
                    }
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                dir('mini-project-5-flask-users') {
                    withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKERHUB_USER', passwordVariable: 'DOCKERHUB_PASS')]) {
                        sh 'echo $DOCKERHUB_PASS | docker login -u $DOCKERHUB_USER --password-stdin'
                        sh 'docker push $DOCKERHUB_USER/mini-project-5-flask-users'
                    }
                }
            }
        }

        stage('Deploy') {
            when {
                branch 'main'
            }
            steps {
                echo 'Deploying...'
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
