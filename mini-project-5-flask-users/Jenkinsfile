pipeline {
    agent any

    environment {
        IMAGE_NAME = "mini-project-5-flask-users"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('mini-project-5-flask-users') {
                    withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKERHUB_USER', passwordVariable: 'DOCKERHUB_PASS')]) {
                        script {
                            docker.build("${DOCKERHUB_USER}/${IMAGE_NAME}", '.')
                        }
                    }
                }
            }
        }

        stage('Run Tests') {
            steps {
                dir('mini-project-5-flask-users') {
                    withCredentials([usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKERHUB_USER', passwordVariable: 'DOCKERHUB_PASS')]) {
                        script {
                            docker.image("${DOCKERHUB_USER}/${IMAGE_NAME}").inside {
                                sh 'pytest tests'
                            }
                        }
                    }
                }
            }
        }

stage('Push Docker Image') {
    steps {
        dir('mini-project-5-flask-users') {
            withCredentials([
                usernamePassword(credentialsId: 'dockerhub-creds', usernameVariable: 'DOCKERHUB_USER', passwordVariable: 'DOCKERHUB_PASS'),
                file(credentialsId: 'GCR_CREDENTIALS', variable: 'GCLOUD_KEY')
            ]) {
                script {
                    sh 'echo $DOCKERHUB_PASS | docker login -u $DOCKERHUB_USER --password-stdin'
                    sh 'docker push $DOCKERHUB_USER/mini-project-5-flask-users'

                    sh "gcloud auth activate-service-account --key-file=$GCLOUD_KEY"
                    sh "gcloud auth configure-docker"
                    
                    // Use DOCKERHUB_USER now safely
                    sh "docker tag ${DOCKERHUB_USER}/${IMAGE_NAME} gcr.io/devops-lab-464007/${IMAGE_NAME}:v1.1.0"
                    sh "docker push gcr.io/devops-lab-464007/${IMAGE_NAME}"
                }
            }
        }
    }
}


        stage('Deploy') {
            when {
                branch 'main'
            }
            steps {
                sh "gcloud run deploy flask-users-service \
                --image gcr.io/devops-lab-464007/${IMAGE_NAME}:v1.1.0 \
                --platform managed \
                --region us-central1 \
                --allow-unauthenticated"
            }
        }
    }

    post {
        always {
            cleanWs()
        }
    }
}
